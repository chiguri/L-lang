(begin
  (def W)
  (def X)
  (def Y)
  (def (mult)
    (begin
      (def Xt)
      (def Yt)
      (def T)
      (def (W+=X)
        (if (nzero? Xt) (begin (sub1 Xt) (add1 W) (W+=X))))
      (def (loop)
        (if (nzero? Yt) (begin (sub1 Yt) (<- Xt X) (W+=X) (loop))))
      (clear W)
      (<- Yt Y)
      (loop)))
  (<-- X 3)
  (<-- Y 4)
  (mult))
